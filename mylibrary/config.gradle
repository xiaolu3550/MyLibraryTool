//应用插件 maven
apply plugin: 'maven'

//声明你的包名
def groupId = 'com.xiaolu'
//声明模块名称
def artifactId = 'Mytool'
//要发布的版本号
def version = '1.1.4'

def localReleaseDest = "${buildDir}/release/${version}"

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
//Maven本地仓库构建
uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
        // Add other pom properties here if you want (developer details / licenses)
        repository(url: "file://${localReleaseDest}")
    }
}
//压缩为zip
task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${version}.zip"
}
//输出到本地补录，位于你的模块中的build下
task generateRelease {
    doLast {
        println "Release ${version} can be found at ${localReleaseDest}/"
        //注意此处，Windows系统需要加入\\转义符，Mac请去掉转义符"\\"
        println "Release ${version} zipped can be found ${buildDir}\\release-${version}.zip"
    }
}

generateRelease.dependsOn(uploadArchives)
generateRelease.dependsOn(zipRelease)

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}